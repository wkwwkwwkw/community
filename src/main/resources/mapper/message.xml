<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cf.vsing.community.dao.MessageMapper">
    <select id="selectConversation" resultType="Message">
        SELECT id, from_id, to_id, conversation_id, content, status, create_time
        FROM message
        WHERE id IN(
        SELECT max(id)
        FROM message
        WHERE status!=2 AND (from_id=#{userId} OR to_id=#{userId})
        GROUP BY conversation_id
        )
        ORDER BY id DESC
        LIMIT #{offset},#{limit}
    </select>

    <select id="selectMaxId" resultType="int">
        SELECT id FROM message
        ORDER BY id DESC
        LIMIT 0,1
    </select>

    <select id="selectDetail" resultType="Message">
        SELECT id, from_id, to_id, conversation_id, content, status, create_time
        FROM message
        WHERE status!=2 AND conversation_id=#{conversationId}
        ORDER BY id DESC
        LIMIT #{offset},#{limit}
    </select>

    <select id="countConversation" resultType="int">
        SELECT COUNT(DISTINCT conversation_id)
        FROM message
        WHERE status!=2 AND (from_id=#{userId} OR to_id=#{userId})
    </select>


    <select id="countDetail" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE status!=2 AND conversation_id=#{conversationId}
    </select>

    <select id="countUnread" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE status=0 AND to_id=#{userId}
        <if test="conversationId!=null">
            AND conversation_id=#{conversationId}
        </if>
    </select>

    <insert id="insertMessage" keyProperty="id" parameterType="Message">
        INSERT INTO message (from_id, to_id, conversation_id, content, status, create_time)
        VALUES (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        UPDATE message SET status=#{status}
        WHERE id in
        <foreach collection="id" item="ID" open="(" separator="," close=")">
            #{ID}
        </foreach>
    </update>

</mapper>